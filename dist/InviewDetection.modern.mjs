function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t},t.apply(this,arguments)}class e{constructor(e={}){this.defaultOptions={elements:"[data-inview]",duration:1,delay:.4,start:"top 90%",ease:"power4",stagger:.095,animationFrom:{opacity:0,"will-change":"transform",y:20},animationTo:{opacity:1,y:0}},this.options=t({},this.defaultOptions,e),this.triggers=[],this.init()}getOption(t){return this.options[t]}init(){try{gsap.utils.toArray(this.getOption("elements")).forEach((t,e)=>{let i=[];t.hasAttribute("data-inview-scope")?(this.addScopedElements(t,i),this.addChildElements(t,i),this.addSplitElements(t,i)):i.push({el:t,order:t.dataset.inviewOrder}),this.orderAnimatedElements(i),this.animateElements(t,i,e)})}catch(t){console.error("Error initialising InviewDetection:",t)}}addScopedElements(t,e){try{t.dataset.inviewScope&&t.querySelectorAll(":scope "+t.dataset.inviewScope).forEach(t=>{const i=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:i})})}catch(t){console.error("Error adding scoped elements:",t)}}addChildElements(t,e){try{t.querySelectorAll(":scope [data-inview-child]").forEach(t=>{const i=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:i})})}catch(t){console.error("Error adding child elements:",t)}}findClosestParentOrderAttr(t){let e=t.parentElement,i=0;for(;e&&i<=5;){if(e.hasAttribute("data-inview-order"))return parseFloat(e.getAttribute("data-inview-order"));e=e.parentElement,i++}if(t.hasAttribute("data-inview-order")){const e=t.getAttribute("data-inview-order");return!isNaN(+e)&&+e}return!1}addSplitElements(t,e){const i=t.querySelectorAll(":scope *:where([data-inview-split])"),r=Array.from(i).filter(t=>t.dataset.inviewSplit);[...Array.from(i).filter(t=>!t.dataset.inviewSplit),...this.getSplitChildren(r)].forEach(t=>this.addSplitElement(t,e))}getSplitChildren(t){let e=[];return t.forEach(t=>{e=[...e,...t.querySelectorAll(":scope "+t.dataset.inviewSplit)]}),e}addSplitElement(t,e){try{let i=this.findClosestParentOrderAttr(t);new SplitText(t,{type:"lines",linesClass:"lineChild"}).lines.forEach(t=>{i?(i+=.01,t.dataset.inviewOrder=i.toFixed(2),e.push({el:t,order:i})):e.push({el:t,order:!1})})}catch(t){console.error("Error splitting element:",t)}}orderAnimatedElements(t){t.sort((t,e)=>{var i,r;return(null!=(i=t.order)?i:1)-(null!=(r=e.order)?r:-1)});for(let e=0;e<t.length;e++)t[e]=t[e].el}animateElements(t,e,i){var r=this;let a=this.getOption("animationFrom"),s=this.getOption("animationTo");try{t.dataset.inviewFrom&&(a=JSON.parse(t.dataset.inviewFrom)),t.dataset.inviewTo&&(s=JSON.parse(t.dataset.inviewTo))}catch(t){console.error("Error parsing JSON",t)}gsap.set(e,a);const n=ScrollTrigger.create({trigger:t,start:t.dataset.inviewStart||this.getOption("start"),onEnter:async function(){await r.runAnimation(t,e,s)},onEnterBack:async function(){t.hasAttribute("data-inview-repeat")&&(gsap.set(e,a),await r.runAnimation(t,e,s))},onLeave:()=>{t.hasAttribute("data-inview-repeat")&&gsap.set(e,a)},onLeaveBack:()=>{t.hasAttribute("data-inview-repeat")&&gsap.set(e,a)},markers:!!t.hasAttribute("data-inview-debug"),toggleClass:{targets:t,className:"is-inview"}});this.triggers.push(n),t.hasAttribute("data-inview-debug")&&this.debugMode(t,e,a,s,i)}async runAnimation(e,i,r){try{await gsap.to(i,t({},r,{duration:e.dataset.inviewDuration||this.getOption("duration"),delay:e.dataset.inviewDelay||this.getOption("delay"),ease:e.dataset.inviewEase||this.getOption("ease"),stagger:{each:e.dataset.inviewStagger||this.getOption("stagger"),from:"start"}})),e.classList.add("has-viewed")}catch(t){console.error("Error animating elements:",t)}}debugMode(t,e,i,r,a){console.group(`InviewDetection() debug instance (${a+1})`),console.log({parent:t,elements:e,animationFrom:i,animationTo:r,duration:this.getOption("duration"),delay:this.getOption("delay"),start:this.getOption("start"),ease:this.getOption("ease"),stagger:this.getOption("stagger")}),console.groupEnd()}refresh(){ScrollTrigger.refresh()}stop(){this.triggers.forEach(t=>t.kill()),gsap.utils.toArray(this.getOption("elements")).forEach(t=>{gsap.killTweensOf(t)})}restart(){gsap.utils.toArray(this.getOption("elements")).forEach(t=>{gsap.killTweensOf(t)}),this.init()}}export{e as default};
//# sourceMappingURL=InviewDetection.modern.mjs.map
