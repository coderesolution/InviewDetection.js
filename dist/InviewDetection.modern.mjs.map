{"version":3,"file":"InviewDetection.modern.mjs","sources":["../src/index.js"],"sourcesContent":["export default class InviewDetection {\n\tconstructor(options = {}) {\n\t\tthis.elements = options.elements || '[data-inview]'\n\t\tthis.duration = options.duration || 1\n\t\tthis.delay = options.delay || 1\n\t\tthis.start = options.start || 'top 90%'\n\t\tthis.ease = options.ease || 'power4'\n\t\tthis.stagger = options.stagger || 0.155\n\t\tthis.animationFrom = options.animationFrom || {\n\t\t\topacity: 0,\n\t\t\t'will-change': 'transform',\n\t\t\ty: 20,\n\t\t}\n\t\tthis.animationTo = options.animationTo || {\n\t\t\topacity: 1,\n\t\t\ty: 0,\n\t\t}\n\t\tthis.init()\n\t}\n\n\tinit() {\n\t\t/**\n\t\t * Loop through each parent\n\t\t */\n\t\tgsap.utils.toArray(this.elements).forEach((oParent, iIndex) => {\n\t\t\t/**\n\t\t\t * Determine what elements are to be animated\n\t\t\t */\n\n\t\t\t/* Create empty array of animated elements */\n\t\t\tvar aAnimatedElements = []\n\n\t\t\t/* Check elements  */\n\t\t\tif (!oParent.hasAttribute('data-inview-scope')) {\n\t\t\t\t/* Add parent element if scope isn't set */\n\t\t\t\taAnimatedElements.push({\n\t\t\t\t\tel: oParent,\n\t\t\t\t\torder: oParent.dataset.inviewOrder,\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t/* Add elements that are defined in parent scope via `data-inview-scope` attribute */\n\t\t\t\tif (oParent.dataset.inviewScope) {\n\t\t\t\t\toParent.querySelectorAll(':scope ' + oParent.dataset.inviewScope).forEach((element) => {\n\t\t\t\t\t\tconst order = parseFloat(element.dataset.inviewOrder)\n\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\tel: element,\n\t\t\t\t\t\t\torder: order,\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t/* Add attributed elements that are children with `data-inview-child` attribute */\n\t\t\t\tif (oParent.querySelectorAll(':scope [data-inview-child]')) {\n\t\t\t\t\toParent.querySelectorAll(':scope [data-inview-child]').forEach((element) => {\n\t\t\t\t\t\tconst order = parseFloat(element.dataset.inviewOrder)\n\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\tel: element,\n\t\t\t\t\t\t\torder: order,\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t/* Add SplitText elements that are defined with `data-inview-split` attribute */\n\t\t\t\tif (oParent.querySelectorAll(':scope *:where([data-inview-split])')) {\n\t\t\t\t\tvar aElementsToSplit = []\n\n\t\t\t\t\tconst aSplitElements = oParent.querySelectorAll(':scope *:where([data-inview-split])')\n\t\t\t\t\tconst aSplitElementsParent = Array.from(aSplitElements).filter(\n\t\t\t\t\t\t(oElement) => oElement.dataset.inviewSplit\n\t\t\t\t\t)\n\t\t\t\t\tconst aSplitElementsSelf = Array.from(aSplitElements).filter(\n\t\t\t\t\t\t(oElement) => !oElement.dataset.inviewSplit\n\t\t\t\t\t)\n\n\t\t\t\t\tif (aSplitElementsSelf) {\n\t\t\t\t\t\taElementsToSplit = Array.prototype.concat.apply(aElementsToSplit, aSplitElementsSelf)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aSplitElementsParent) {\n\t\t\t\t\t\taSplitElementsParent.forEach((oSplitParent) => {\n\t\t\t\t\t\t\tconst oSplitChildren = oSplitParent.querySelectorAll(\n\t\t\t\t\t\t\t\t':scope ' + oSplitParent.dataset.inviewSplit\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\taElementsToSplit = Array.prototype.concat.apply(aElementsToSplit, oSplitChildren)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\taElementsToSplit.forEach((oSplitElement) => {\n\t\t\t\t\t\tvar iOrder = fnFindClosestParentOrderAttr(oSplitElement)\n\t\t\t\t\t\tconst oSplitChildren = new SplitText(oSplitElement, {\n\t\t\t\t\t\t\ttype: 'lines',\n\t\t\t\t\t\t\tlinesClass: 'lineChild',\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\toSplitChildren.lines.forEach((oLine) => {\n\t\t\t\t\t\t\tif (iOrder) {\n\t\t\t\t\t\t\t\tiOrder += 0.01\n\t\t\t\t\t\t\t\toLine.dataset.inviewOrder = iOrder.toFixed(2)\n\t\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\t\tel: oLine,\n\t\t\t\t\t\t\t\t\torder: iOrder,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\t\tel: oLine,\n\t\t\t\t\t\t\t\t\torder: false,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Function to find the closest parent containing the order attribute */\n\t\t\tfunction fnFindClosestParentOrderAttr(oElement) {\n\t\t\t\tlet oParent = oElement.parentElement\n\t\t\t\tlet iAncestorsIndexed = 0\n\t\t\t\tlet iAncestorsLimit = 5\n\t\t\t\twhile (oParent && iAncestorsIndexed <= iAncestorsLimit) {\n\t\t\t\t\tif (oParent.hasAttribute('data-inview-order')) {\n\t\t\t\t\t\treturn parseFloat(oParent.getAttribute('data-inview-order'))\n\t\t\t\t\t}\n\t\t\t\t\toParent = oParent.parentElement\n\t\t\t\t\tiAncestorsIndexed++\n\t\t\t\t}\n\t\t\t\tif (oElement.hasAttribute('data-inview-order')) {\n\t\t\t\t\tconst value = oElement.getAttribute('data-inview-order')\n\t\t\t\t\treturn Number.isInteger(+value) ? +value : false\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\t/* Reorder elements based on their order value */\n\t\t\taAnimatedElements.sort((a, b) => {\n\t\t\t\tif (isNaN(a['order']) || a['order'] === false || a['order'] === null || a['order'] === undefined) {\n\t\t\t\t\treturn 1 // preserve original order of NaN/false/null values\n\t\t\t\t} else if (\n\t\t\t\t\tisNaN(b['order']) ||\n\t\t\t\t\tb['order'] === false ||\n\t\t\t\t\tb['order'] === null ||\n\t\t\t\t\tb['order'] === undefined\n\t\t\t\t) {\n\t\t\t\t\treturn -1 // preserve original order of NaN/false/null values\n\t\t\t\t} else {\n\t\t\t\t\treturn a['order'] - b['order'] // sort by order value\n\t\t\t\t}\n\t\t\t})\n\n\t\t\taAnimatedElements = aAnimatedElements.map((oElement) => oElement.el)\n\n\t\t\t/**\n\t\t\t * Initial animate FROM properties\n\t\t\t */\n\t\t\tvar aAnimateFromProperties = this.animationFrom\n\n\t\t\tif (oParent.dataset.inviewFrom) {\n\t\t\t\taAnimateFromProperties = JSON.parse(oParent.dataset.inviewFrom)\n\t\t\t}\n\t\t\tgsap.set(aAnimatedElements, aAnimateFromProperties)\n\n\t\t\t/**\n\t\t\t * Animate TO properties (based on scroll position)\n\t\t\t */\n\t\t\tvar aAnimateToProperties = this.animationTo\n\n\t\t\tif (oParent.dataset.inviewTo) {\n\t\t\t\taAnimateToProperties = JSON.parse(oParent.dataset.inviewTo)\n\t\t\t}\n\n\t\t\tScrollTrigger.batch(oParent, {\n\t\t\t\tstart: oParent.dataset.inviewStart || this.start,\n\t\t\t\tonEnter: () => {\n\t\t\t\t\tgsap.to(aAnimatedElements, {\n\t\t\t\t\t\t...aAnimateToProperties,\n\t\t\t\t\t\tduration: oParent.dataset.inviewDuration || this.duration,\n\t\t\t\t\t\tdelay: oParent.dataset.inviewDelay || this.delay,\n\t\t\t\t\t\tease: oParent.dataset.inviewEase || this.ease,\n\t\t\t\t\t\tstagger: {\n\t\t\t\t\t\t\teach: oParent.dataset.inviewStagger || this.stagger,\n\t\t\t\t\t\t\tfrom: 'start',\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t\toParent.classList.add('has-viewed')\n\t\t\t\t},\n\t\t\t\tmarkers: oParent.hasAttribute('data-inview-debug') ? true : false,\n\t\t\t\ttoggleClass: {\n\t\t\t\t\ttargets: oParent,\n\t\t\t\t\tclassName: 'is-inview',\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t/* Debug mode */\n\t\t\tif (oParent.hasAttribute('data-inview-debug')) {\n\t\t\t\tconsole.group(`InviewDetection() debug instance (${iIndex + 1})`)\n\t\t\t\tconsole.log({\n\t\t\t\t\tparent: oParent,\n\t\t\t\t\telements: aAnimatedElements,\n\t\t\t\t\tanimationFrom: aAnimateFromProperties,\n\t\t\t\t\tanimationTo: aAnimateToProperties,\n\t\t\t\t\tduration: this.duration,\n\t\t\t\t\tdelay: this.delay,\n\t\t\t\t\tstart: this.start,\n\t\t\t\t\tease: this.ease,\n\t\t\t\t\tstagger: this.stagger,\n\t\t\t\t})\n\t\t\t\tconsole.groupEnd()\n\t\t\t}\n\t\t})\n\t}\n}\n"],"names":["InviewDetection","constructor","options","this","elements","duration","delay","start","ease","stagger","animationFrom","opacity","y","animationTo","init","gsap","utils","toArray","forEach","oParent","iIndex","aAnimatedElements","hasAttribute","dataset","inviewScope","querySelectorAll","element","order","parseFloat","inviewOrder","push","el","aElementsToSplit","aSplitElements","aSplitElementsParent","Array","from","filter","oElement","inviewSplit","aSplitElementsSelf","prototype","concat","apply","oSplitParent","oSplitChildren","oSplitElement","iOrder","parentElement","iAncestorsIndexed","getAttribute","value","Number","isInteger","fnFindClosestParentOrderAttr","SplitText","type","linesClass","lines","oLine","toFixed","sort","a","b","isNaN","map","aAnimateFromProperties","inviewFrom","JSON","parse","set","aAnimateToProperties","inviewTo","ScrollTrigger","batch","inviewStart","onEnter","to","inviewDuration","inviewDelay","inviewEase","each","inviewStagger","classList","add","markers","toggleClass","targets","className","console","group","log","parent","groupEnd"],"mappings":"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"}