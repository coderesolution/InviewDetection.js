!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t||self).inviewdetection=e()}(this,function(){function t(){return t=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t},t.apply(this,arguments)}/*#__PURE__*/
return function(){function e(e){void 0===e&&(e={}),this.defaultOptions={elements:"[data-inview]",duration:1,delay:.4,start:"top 90%",ease:"power4",stagger:.095,animationFrom:{opacity:0,"will-change":"transform",y:20},animationTo:{opacity:1,y:0}},this.options=t({},this.defaultOptions,e),this.triggers=[],this.init()}var n=e.prototype;return n.getOption=function(t){return this.options[t]},n.init=function(){var t=this;try{gsap.utils.toArray(this.getOption("elements")).forEach(function(e,n){var i=[];e.hasAttribute("data-inview-scope")?(t.addScopedElements(e,i),t.addChildElements(e,i),t.addSplitElements(e,i)):i.push({el:e,order:e.dataset.inviewOrder}),t.orderAnimatedElements(i),t.animateElements(e,i,n)})}catch(t){console.error("Error initialising InviewDetection:",t)}},n.addScopedElements=function(t,e){try{t.dataset.inviewScope&&t.querySelectorAll(":scope "+t.dataset.inviewScope).forEach(function(t){var n=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:n})})}catch(t){console.error("Error adding scoped elements:",t)}},n.addChildElements=function(t,e){try{t.querySelectorAll(":scope [data-inview-child]").forEach(function(t){var n=parseFloat(t.dataset.inviewOrder);e.push({el:t,order:n})})}catch(t){console.error("Error adding child elements:",t)}},n.findClosestParentOrderAttr=function(t){for(var e=t.parentElement,n=0;e&&n<=5;){if(e.hasAttribute("data-inview-order"))return parseFloat(e.getAttribute("data-inview-order"));e=e.parentElement,n++}if(t.hasAttribute("data-inview-order")){var i=t.getAttribute("data-inview-order");return!isNaN(+i)&&+i}return!1},n.addSplitElements=function(t,e){var n=this,i=t.querySelectorAll(":scope *:where([data-inview-split])"),r=Array.from(i).filter(function(t){return t.dataset.inviewSplit}),a=Array.from(i).filter(function(t){return!t.dataset.inviewSplit});[].concat(a,this.getSplitChildren(r)).forEach(function(t){return n.addSplitElement(t,e)})},n.getSplitChildren=function(t){var e=[];return t.forEach(function(t){e=[].concat(e,t.querySelectorAll(":scope "+t.dataset.inviewSplit))}),e},n.addSplitElement=function(t,e){try{var n=this.findClosestParentOrderAttr(t);new SplitText(t,{type:"lines",linesClass:"lineChild"}).lines.forEach(function(t){n?(t.dataset.inviewOrder=(n+=.01).toFixed(2),e.push({el:t,order:n})):e.push({el:t,order:!1})})}catch(t){console.error("Error splitting element:",t)}},n.orderAnimatedElements=function(t){t.sort(function(t,e){var n,i;return(null!=(n=t.order)?n:1)-(null!=(i=e.order)?i:-1)});for(var e=0;e<t.length;e++)t[e]=t[e].el},n.animateElements=function(t,e,n){var i=this,r=this,a=this.getOption("animationFrom"),o=this.getOption("animationTo");try{t.dataset.inviewFrom&&(a=JSON.parse(t.dataset.inviewFrom)),t.dataset.inviewTo&&(o=JSON.parse(t.dataset.inviewTo))}catch(t){console.error("Error parsing JSON",t)}gsap.set(e,a);var s=ScrollTrigger.create({trigger:t,start:t.dataset.inviewStart||this.getOption("start"),onEnter:function(){try{return Promise.resolve(i.runAnimation(t,e,o)).then(function(){})}catch(t){return Promise.reject(t)}},onEnterBack:function(){try{var n=function(){if(t.hasAttribute("data-inview-repeat"))return gsap.set(e,a),Promise.resolve(r.runAnimation(t,e,o)).then(function(){})}();return Promise.resolve(n&&n.then?n.then(function(){}):void 0)}catch(t){return Promise.reject(t)}},onLeave:function(){t.hasAttribute("data-inview-repeat")&&gsap.set(e,a)},onLeaveBack:function(){t.hasAttribute("data-inview-repeat")&&gsap.set(e,a)},markers:!!t.hasAttribute("data-inview-debug"),toggleClass:{targets:t,className:"is-inview"}});this.triggers.push(s),t.hasAttribute("data-inview-debug")&&this.debugMode(t,e,a,o,n)},n.runAnimation=function(e,n,i){try{var r=this,a=function(a,o){try{var s=Promise.resolve(gsap.to(n,t({},i,{duration:e.dataset.inviewDuration||r.getOption("duration"),delay:e.dataset.inviewDelay||r.getOption("delay"),ease:e.dataset.inviewEase||r.getOption("ease"),stagger:{each:e.dataset.inviewStagger||r.getOption("stagger"),from:"start"}}))).then(function(){e.classList.add("has-viewed")})}catch(t){return o(t)}return s&&s.then?s.then(void 0,o):s}(0,function(t){console.error("Error animating elements:",t)});return Promise.resolve(a&&a.then?a.then(function(){}):void 0)}catch(t){return Promise.reject(t)}},n.debugMode=function(t,e,n,i,r){console.group("InviewDetection() debug instance ("+(r+1)+")"),console.log({parent:t,elements:e,animationFrom:n,animationTo:i,duration:this.getOption("duration"),delay:this.getOption("delay"),start:this.getOption("start"),ease:this.getOption("ease"),stagger:this.getOption("stagger")}),console.groupEnd()},n.refresh=function(){ScrollTrigger.refresh()},n.stop=function(){this.triggers.forEach(function(t){return t.kill()}),gsap.utils.toArray(this.getOption("elements")).forEach(function(t){gsap.killTweensOf(t)})},n.restart=function(){gsap.utils.toArray(this.getOption("elements")).forEach(function(t){gsap.killTweensOf(t)}),this.init()},e}()});
//# sourceMappingURL=InviewDetection.umd.js.map
