{"version":3,"file":"InviewDetection.umd.js","sources":["../src/InviewDetection.js"],"sourcesContent":["class InviewDetection {\n\tconstructor(options = {}) {\n\t\tthis.elements = options.elements || '[data-inview]';\n\t\tthis.duration = options.duration || 1;\n\t\tthis.delay = options.delay || 1;\n\t\tthis.start = options.start || 'top 90%';\n\t\tthis.ease = options.ease || 'power4';\n\t\tthis.stagger = options.stagger || 0.155;\n\t\tthis.init();\n\t}\n\n\tinit() {\n\t\t/**\n\t\t * Loop through each parent\n\t\t */\n\t\tgsap.utils.toArray(this.elements).forEach((oParent) => {\n\t\t\t/**\n\t\t\t * Determine what elements are to be animated\n\t\t\t */\n\n\t\t\t/* Create empty array of animated elements */\n\t\t\tvar aAnimatedElements = [];\n\n\t\t\t/* Check elements  */\n\t\t\tif (!oParent.hasAttribute('data-inview-scope')) {\n\t\t\t\t/* Add parent element if scope isn't set */\n\t\t\t\taAnimatedElements.push({\n\t\t\t\t\tel: oParent,\n\t\t\t\t\torder: oParent.dataset.inviewOrder,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t/* Add elements that are defined in parent scope via `data-inview-scope` attribute */\n\t\t\t\tif (oParent.dataset.inviewScope) {\n\t\t\t\t\toParent\n\t\t\t\t\t\t.querySelectorAll(\n\t\t\t\t\t\t\t':scope ' + oParent.dataset.inviewScope\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.forEach((element) => {\n\t\t\t\t\t\t\tconst order = parseFloat(\n\t\t\t\t\t\t\t\telement.dataset.inviewOrder\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\tel: element,\n\t\t\t\t\t\t\t\torder: order,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/* Add attributed elements that are children with `data-inview-child` attribute */\n\t\t\t\tif (oParent.querySelectorAll(':scope [data-inview-child]')) {\n\t\t\t\t\toParent\n\t\t\t\t\t\t.querySelectorAll(':scope [data-inview-child]')\n\t\t\t\t\t\t.forEach((element) => {\n\t\t\t\t\t\t\tconst order = parseFloat(\n\t\t\t\t\t\t\t\telement.dataset.inviewOrder\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\tel: element,\n\t\t\t\t\t\t\t\torder: order,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t/* Add SplitText elements that are defined with `data-inview-split` attribute */\n\t\t\t\tif (\n\t\t\t\t\toParent.querySelectorAll(\n\t\t\t\t\t\t':scope *:where([data-inview-split])'\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tvar aElementsToSplit = [];\n\n\t\t\t\t\tconst aSplitElements = oParent.querySelectorAll(\n\t\t\t\t\t\t':scope *:where([data-inview-split])'\n\t\t\t\t\t);\n\t\t\t\t\tconst aSplitElementsParent = Array.from(\n\t\t\t\t\t\taSplitElements\n\t\t\t\t\t).filter((oElement) => oElement.dataset.inviewSplit);\n\t\t\t\t\tconst aSplitElementsSelf = Array.from(\n\t\t\t\t\t\taSplitElements\n\t\t\t\t\t).filter((oElement) => !oElement.dataset.inviewSplit);\n\n\t\t\t\t\tif (aSplitElementsSelf) {\n\t\t\t\t\t\taElementsToSplit = Array.prototype.concat.apply(\n\t\t\t\t\t\t\taElementsToSplit,\n\t\t\t\t\t\t\taSplitElementsSelf\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (aSplitElementsParent) {\n\t\t\t\t\t\taSplitElementsParent.forEach((oSplitParent) => {\n\t\t\t\t\t\t\tconst oSplitChildren =\n\t\t\t\t\t\t\t\toSplitParent.querySelectorAll(\n\t\t\t\t\t\t\t\t\t':scope ' + oSplitParent.dataset.inviewSplit\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\taElementsToSplit = Array.prototype.concat.apply(\n\t\t\t\t\t\t\t\taElementsToSplit,\n\t\t\t\t\t\t\t\toSplitChildren\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\taElementsToSplit.forEach((oSplitElement) => {\n\t\t\t\t\t\tvar iOrder =\n\t\t\t\t\t\t\tfnFindClosestParentOrderAttr(oSplitElement);\n\t\t\t\t\t\tconst oSplitChildren = new SplitText(oSplitElement, {\n\t\t\t\t\t\t\ttype: 'lines',\n\t\t\t\t\t\t\tlinesClass: 'lineChild',\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\toSplitChildren.lines.forEach((oLine) => {\n\t\t\t\t\t\t\tif (iOrder) {\n\t\t\t\t\t\t\t\tiOrder += 0.01;\n\t\t\t\t\t\t\t\toLine.dataset.inviewOrder = iOrder.toFixed(2);\n\t\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\t\tel: oLine,\n\t\t\t\t\t\t\t\t\torder: iOrder,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\taAnimatedElements.push({\n\t\t\t\t\t\t\t\t\tel: oLine,\n\t\t\t\t\t\t\t\t\torder: false,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Function to find the closest parent containing the order attribute */\n\t\t\tfunction fnFindClosestParentOrderAttr(oElement) {\n\t\t\t\tlet oParent = oElement.parentElement;\n\t\t\t\tlet iAncestorsIndexed = 0;\n\t\t\t\tlet iAncestorsLimit = 5;\n\t\t\t\twhile (oParent && iAncestorsIndexed <= iAncestorsLimit) {\n\t\t\t\t\tif (oParent.hasAttribute('data-inview-order')) {\n\t\t\t\t\t\treturn parseFloat(\n\t\t\t\t\t\t\toParent.getAttribute('data-inview-order')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\toParent = oParent.parentElement;\n\t\t\t\t\tiAncestorsIndexed++;\n\t\t\t\t}\n\t\t\t\tif (oElement.hasAttribute('data-inview-order')) {\n\t\t\t\t\tconst value = oElement.getAttribute('data-inview-order');\n\t\t\t\t\treturn Number.isInteger(+value) ? +value : false;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t/* Reorder elements based on their order value */\n\t\t\taAnimatedElements.sort((a, b) => {\n\t\t\t\tif (\n\t\t\t\t\tisNaN(a['order']) ||\n\t\t\t\t\ta['order'] === false ||\n\t\t\t\t\ta['order'] === null ||\n\t\t\t\t\ta['order'] === undefined\n\t\t\t\t) {\n\t\t\t\t\treturn 1; // preserve original order of NaN/false/null values\n\t\t\t\t} else if (\n\t\t\t\t\tisNaN(b['order']) ||\n\t\t\t\t\tb['order'] === false ||\n\t\t\t\t\tb['order'] === null ||\n\t\t\t\t\tb['order'] === undefined\n\t\t\t\t) {\n\t\t\t\t\treturn -1; // preserve original order of NaN/false/null values\n\t\t\t\t} else {\n\t\t\t\t\treturn a['order'] - b['order']; // sort by order value\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taAnimatedElements = aAnimatedElements.map(\n\t\t\t\t(oElement) => oElement.el\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * Initial animate FROM properties\n\t\t\t */\n\t\t\tvar aAnimateFromProperties = {\n\t\t\t\topacity: 0,\n\t\t\t\t'will-change': 'transform',\n\t\t\t\ty: 20,\n\t\t\t};\n\n\t\t\tif (oParent.dataset.inviewFrom) {\n\t\t\t\taAnimateFromProperties = JSON.parse(oParent.dataset.inviewFrom);\n\t\t\t}\n\t\t\tgsap.set(aAnimatedElements, aAnimateFromProperties);\n\n\t\t\t/**\n\t\t\t * Animate TO properties (based on scroll position)\n\t\t\t */\n\t\t\tvar aAnimateToProperties = {\n\t\t\t\topacity: 1,\n\t\t\t\ty: 0,\n\t\t\t};\n\n\t\t\tif (oParent.dataset.inviewTo) {\n\t\t\t\taAnimateToProperties = JSON.parse(oParent.dataset.inviewTo);\n\t\t\t}\n\n\t\t\tScrollTrigger.batch(oParent, {\n\t\t\t\tstart: oParent.dataset.inviewStart || this.start,\n\t\t\t\tonEnter: () => {\n\t\t\t\t\tgsap.to(aAnimatedElements, {\n\t\t\t\t\t\t...aAnimateToProperties,\n\t\t\t\t\t\tduration:\n\t\t\t\t\t\t\toParent.dataset.inviewDuration || this.duration,\n\t\t\t\t\t\tdelay: oParent.dataset.inviewDelay || this.delay,\n\t\t\t\t\t\tease: oParent.dataset.inviewEase || this.ease,\n\t\t\t\t\t\tstagger: {\n\t\t\t\t\t\t\teach: oParent.dataset.inviewStagger || this.stagger,\n\t\t\t\t\t\t\tfrom: 'start',\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\toParent.classList.add('has-viewed');\n\t\t\t\t},\n\t\t\t\tmarkers: oParent.hasAttribute('data-inview-debug')\n\t\t\t\t\t? true\n\t\t\t\t\t: false,\n\t\t\t\ttoggleClass: {\n\t\t\t\t\ttargets: oParent,\n\t\t\t\t\tclassName: 'is-inview',\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * DEBUG\n\t\t\t */\n\t\t\tif (oParent.hasAttribute('data-inview-debug')) {\n\t\t\t\tconsole.group('uInviewDetection() debug instance');\n\t\t\t\tconsole.log('Parent:', oParent);\n\t\t\t\tconsole.log('Animating from:', aAnimateFromProperties);\n\t\t\t\tconsole.log('Animating to:', aAnimateToProperties);\n\t\t\t\tconsole.log('Queued elements:', aAnimatedElements);\n\t\t\t\tconsole.groupEnd();\n\t\t\t}\n\t\t});\n\t}\n}\n\n// Export the InviewDetection class\nexport default InviewDetection;\n"],"names":["InviewDetection","options","this","elements","duration","delay","start","ease","stagger","init","prototype","_this","gsap","utils","toArray","forEach","oParent","aAnimatedElements","hasAttribute","dataset","inviewScope","querySelectorAll","element","order","parseFloat","inviewOrder","push","el","aElementsToSplit","aSplitElements","aSplitElementsParent","Array","from","filter","oElement","inviewSplit","aSplitElementsSelf","concat","apply","oSplitParent","oSplitChildren","oSplitElement","iOrder","parentElement","iAncestorsIndexed","getAttribute","value","Number","isInteger","fnFindClosestParentOrderAttr","SplitText","type","linesClass","lines","oLine","toFixed","sort","a","b","isNaN","map","aAnimateFromProperties","opacity","y","inviewFrom","JSON","parse","set","aAnimateToProperties","inviewTo","ScrollTrigger","batch","inviewStart","onEnter","to","_extends","inviewDuration","inviewDelay","inviewEase","each","inviewStagger","classList","add","markers","toggleClass","targets","className","console","group","log","groupEnd"],"mappings":"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"}